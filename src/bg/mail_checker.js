// Generated by CoffeeScript 1.7.1
(function() {
  this.MailChecker = (function() {
    function MailChecker(checkUrl) {
      this.checkUrl = checkUrl;
    }

    MailChecker.prototype.isLoginPage = function(ele) {
      var _ref;
      return (_ref = ele.querySelector("title")) != null ? _ref.innerText.match("ログイン") : void 0;
    };

    MailChecker.prototype.hasMail = function(ele) {
      return ele.querySelector("b");
    };

    MailChecker.prototype.getMailCount = function(ele) {
      var _ref;
      return (_ref = ele.querySelector("b")) != null ? _ref.innerText : void 0;
    };

    MailChecker.prototype.getContent = function(ele) {
      if (this.isLoginPage(ele)) {
        ele.innerText = "ログインしてません。";
        return ele;
      } else {
        return ele;
      }
    };

    MailChecker.prototype.createStatus = function(xhr) {
      var ele, status;
      status = {
        login: false,
        hasMail: false,
        count: 0,
        content: null
      };
      if (xhr.responseText == null) {
        return status;
      }
      ele = document.createElement('div');
      ele.innerHTML = xhr.responseText;
      status.login = !this.isLoginPage(ele);
      status.hasMail = this.hasMail(ele);
      status.count = this.getMailCount(ele);
      status.content = this.getContent(ele);
      return status;
    };

    MailChecker.prototype.check = function() {
      return this.get().then((function(_this) {
        return function(xhr) {
          var status;
          status = _this.createStatus(xhr);
          return status;
        };
      })(this), function(e) {
        return console.log(e);
      });
    };

    MailChecker.prototype.get = function() {
      return new Promise((function(_this) {
        return function(resolve, reject) {
          var xhr;
          xhr = new XMLHttpRequest();
          xhr.onreadystatechange = function() {
            if (xhr.readyState === 4) {
              return resolve(xhr);
            }
          };
          xhr.open('GET', _this.checkUrl);
          return xhr.send(null);
        };
      })(this));
    };

    return MailChecker;

  })();

}).call(this);

//# sourceMappingURL=mail_checker.map
